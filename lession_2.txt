#Задания (занятие 2)

#Типы данных Ruby
#Управляющие конструкции
#Циклы и итераторы


#Для класса Fixnum:

FDIV                         #Метод, возвращающий вещественный результат от деления

odd?                         #Метод проверяющий, является ли число нечётным

#Для класса Integer:

gcd                          #Метод, возвращающий Наибольший Общий Делитель 2-х чисел       72.gcd 168

upto                         #Метод, позволяющий итерировать от одного числа до другого     5.upto(10) { |i| print i, " " }

rationalize                  #Метод приведения целого числа к рациональному                 2.rationalize 

#Для класса Numeric:

step(limit, step)            #Метод, позволяющий итерировать от данного целого числа с указанием шага 
                               итерации числа верхнего предела итерации
complex                      #Метод, приводящий данное число к комплексному (мнимому)

#Для класса Float:
 
inspect                      #Метод, приводящий вещественное число к строке                2.1526741.inspect

#Для класса Array:

last                        #Метод, возвращающий последний элемент из массива (с его извлечением из массива)
push                        #Метод, добавляющий элемент в конец массива

#Для класса Hash:

keys                       #Метод, возвращающий массив ключей хэша           hash.keys
values                     #Метод, возвращающий массив значений хэша         hash.values

#Для класса Range:

exclude_end?               #Метод, проверяющий, включено ли последнее значение в диапазон



#------------------------------------------------------------------------------------------------------------
#2. Условное выражение if-else-end

player = { name: 'johnny', color: :red }

colors = [:blue, :white, :green, :red, :orange]

if 

#-----------------------------------------------------------------------------------------------------------
#3. Итерация с условиями

names = %w[ambientsketchbook Erik\ Wollo Brian\ Eno Evangelos\ Papathanassiou Shulman]

puts name.find_all{ |elem| elem.size>4 }

#-----------------------------------------------------------------------------------------------------------
#4. Количество символов в элементе массива


#----------------------------------------------------------------------------------------------------------
5. Самая удивительная последовательность

def fibonacci(n)
    if n < 3
        1
    else
        fibonacci(n - 1) + fibonacci(n - 2)
    end
end


(1..20).each {|n| puts "#{fibonacci(n)}, "}                     # Пример

#------------------------------------------------------------------------------------------------------------
6. Продвинутый шифр Цезаря

def rot13(value)
  return value.tr("a-z", "n-za-m")
end

cypher = 'Ybh unpxrq n irel frperg zrffntr!'
rot13(cypher)

cypher = 'Eitravl Fngrri gur orfg grnpure sbe Rhol'             #Пример  
rot13(cypher)

#------------------------------------------------------------------------------------------------------

               THE END











